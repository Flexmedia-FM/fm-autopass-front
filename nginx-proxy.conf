# Configuração do Nginx Proxy Reverso para FM AutoPass
# Para usar com múltiplos ambientes simultaneamente

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Configurações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Configuração de upstreams
    upstream frontend_dev {
        server fm-autopass-frontend-dev:5173;
    }

    upstream frontend_staging {
        server fm-autopass-frontend-staging:80;
    }

    upstream frontend_prod {
        server fm-autopass-frontend-prod:80;
    }

    # Servidor para desenvolvimento (dev.autopass.local)
    server {
        listen 80;
        server_name dev.autopass.local localhost;

        location / {
            proxy_pass http://frontend_dev;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support para hot reload
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Servidor para staging (staging.autopass.local)
    server {
        listen 80;
        server_name staging.autopass.local;

        location / {
            proxy_pass http://frontend_staging;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Servidor para produção (autopass.local)
    server {
        listen 80 default_server;
        server_name autopass.local _;

        location / {
            proxy_pass http://frontend_prod;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Health check endpoint
    server {
        listen 80;
        server_name health.autopass.local;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
